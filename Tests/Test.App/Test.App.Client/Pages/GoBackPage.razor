@rendermode InteractiveAuto
@namespace Test.App.Client.Pages
@attribute [Route(Route)]
@inherits BaseComponent

<PageTitle>@Title</PageTitle>
<h1>@Title</h1>
@RenderModeDisplay
<hr>
<!-- Arrange -->
<!-- Test description -->
<p>Test the GoBack Handler</p>
<br/>
<!-- Values to validate -->
<h4>History Stack</h4>
@foreach(RouteState.RouteInfo? url in  RouteState.History)
{
  <div>@url</div>
}

<!-- Actions to take -->
<button data-qa="GoBack" @onclick=@(() => GoBack(1))>Go Back</button>
<button data-qa="GoBack 2" @onclick=@(() => GoBack(2))>Go Back 2</button>
<hr>

<!-- ACT -->
<p><strong>Act:</strong> Click the `Go Back` button</p>

<!-- ASSERT -->
<p>
  <strong>Assert:</strong>
  Verify that the route changes to the top one on the History Stack if the `Go Back` button is clicked.
  Verify that the route changes to the second on the History Stack if the `Go Back 2` button is clicked.
</p>

<hr>
<p>
  <strong>Repeat</strong> the above steps where `Current Render Mode` is Server and Wasm.
</p>

@code
{
  /// <summary>
  /// The title of the page
  /// </summary>
  public const string Title = "Go Back Page";
  
  /// <summary>
  /// The route for the page
  /// </summary>
  public const string Route = "/goback";
  
  private async Task GoBack(int amount) =>
    await Send(new RouteState.GoBack.Action(amount));
}
