@rendermode InteractiveAuto
@attribute [Route(Route)]
@using Test.App.Client.Features.WeatherForecast
@using Test.App.Contracts.Features.WeatherForecast
@inherits BaseComponent

<PageTitle>@Title</PageTitle>
<h1>Weather forecast</h1>
@RenderModeDisplay
<br/>
<div>This component demonstrates fetching data from the server.</div>

// TODO: Won't ever be null, so how can I tell when loading?
// We should use the IsProcessing Middleware to show a spinner when loading.
@if (WeatherForecastsState.WeatherForecasts == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table" data-qa="WeatherForecastTable">
    <thead>
      <tr>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
      </tr>
    </thead>
    <tbody>
      @foreach (WeatherForecastDto forecast in WeatherForecastsState.WeatherForecasts)
      {
        <tr>
          <td>@forecast.Date.ToShortDateString()</td>
          <td>@forecast.TemperatureC</td>
          <td>@forecast.TemperatureF</td>
          <td>@forecast.Summary</td>
        </tr>
      }
    </tbody>
  </table>
}

@code
{
  /// <summary>
  /// The title for the page.
  /// </summary>
  public const string Title = "Weather forecast";
  
  /// <summary>
  /// The route for the page.
  /// </summary>
  public const string Route = "/weatherforecasts";
  
  /// <inheritdoc/>
  protected override async Task OnInitializedAsync() =>
    await Mediator.Send(new WeatherForecastsState.FetchWeatherForecastsAction());
}
