<Project>
  <!-- Set common properties regarding assembly information and nuget packages -->
  <PropertyGroup>
    <Authors>Steven T. Cramer</Authors>
    <Product>Blazor State</Product>
    <PackageVersion>11.0.0-beta.13+8.0.101</PackageVersion>
    <PackageProjectUrl>https://timewarpengineering.github.io/blazor-state/</PackageProjectUrl>
    <PackageTags>TimeWarp-State; TimeWarpState; BlazorState; Blazor; State; Blazor-State; MediatR; Mediator; Pipeline; Redux; Flux</PackageTags>
    <PackageIcon>Logo.png</PackageIcon>
    <RepositoryUrl>https://github.com/TimeWarpEngineering/blazor-state.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageLicenseExpression>Unlicense</PackageLicenseExpression>
    <PackageReleaseNotes>https://timewarpengineering.github.io/blazor-state/Overview.html</PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- Deterministic Builds  https://devblogs.microsoft.com/dotnet/producing-packages-with-source-link/#deterministic-builds -->
  <PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <NoWarn>CS7035;NU1503;1503</NoWarn>
    <Nullable>disable</Nullable>
    <TargetFramework>net8.0</TargetFramework>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>

  <!--This is to add the SHA for the commit to your assembly InformationalVersion -->
  
  <PropertyGroup>
    <GitHeadSha>Not found</GitHeadSha>
    <DotGitDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory).git'))</DotGitDir>
    <HeadFileContent Condition="Exists('$(DotGitDir)/HEAD')">$([System.IO.File]::ReadAllText('$(DotGitDir)/HEAD').Trim())</HeadFileContent>
    <RefPath Condition="$(HeadFileContent.StartsWith('ref: '))">$(DotGitDir)/$(HeadFileContent.Substring(5))</RefPath>
    <GitHeadSha Condition="'$(RefPath)' != '' AND Exists('$(RefPath)')">$([System.IO.File]::ReadAllText('$(RefPath)').Trim())</GitHeadSha>
    <GitHeadSha Condition="'$(HeadFileContent)' != '' AND '$(RefPath)' == ''">$(HeadFileContent)</GitHeadSha>
  </PropertyGroup>

  <Target Name="SetLastCommitDate" BeforeTargets="PreBuildEvent">
    <Exec Command="git log -1 --format=%%ct" ConsoleToMSBuild="true" EchoOff="true" WorkingDirectory="$(MSBuildThisFileDirectory)">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <PropertyGroup>
      <LastCommitDate>$([System.DateTime]::UnixEpoch.AddSeconds($(GitCommitTimestamp)).ToLocalTime().ToString("yyyy-MM-ddTHH:mm:ssK"))</LastCommitDate>
    </PropertyGroup>
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitHash</_Parameter1>
        <_Parameter2>$(GitHeadSha)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitDate</_Parameter1>
        <_Parameter2>$(LastCommitDate)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
    <Message Importance="high" Text="$(GitHeadSha)" />
  </Target>
</Project>
